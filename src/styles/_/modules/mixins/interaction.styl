/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━  BUTTONS  ━━━━━━━━━━━━━━━━━━━━━━━━━━━*/

button(size = '', type = 'f', color = _default, fontsize = 1rem, background = true, padding...)

    background = background ? background : transparent

    if size is 'small'
        font-size: 1rem
        padding: padding or rem(14px) rem(20px)

    else if size is 'medium'
        font-size: 1.1rem
        padding: padding or rem(15px) rem(25px)

    else if size is 'large'
        font-size: 1.25rem
        padding: padding or rem(16px) rem(28px)

    else if size is 'stretch'
        width: 100%
        font-size: fontsize
        padding: padding or rem(14px) rem(20px)

    else
        font-size: fontsize
        padding: padding or (rem(14px) rem(20px))

    if type == 'flat_inverted' || type == 'fi' || type == '1di'

        color: white
        background: color
        &:hover
            color: color
            background: background

    else if type == 'flat' || type == 'f' || type == '1d'

        color: color
        background: background
        &:hover
            color: white
            background: color

    // shared properties
    text-align: center
    border: 1px solid color
    &:hover
        cursor: pointer

button-3d(type, color, size, weight, radius, padding...)
    // args: (light, rgba(200,200,200,0.7), 0.9em, normal, 5px, 10px 30px) - (light)
    // args: (dark, rgba(76,76,76,0.7), 0.9em, normal, 5px, 8px 18px) - (dark)
    // The aim is to reduce the color-specific margin of error in future revisions.
    // 'type' is predefined and should be either 'light' or 'dark'.
    // 'padding' supports both short & long notation, '10px 20px' || '10px 20px 10px 20px'

    display: inline-block
    margin: 0 auto
    padding: padding
    font-size: size
    font-weight: weight
    text-align: center
    border-radius: radius
    transition(all 200ms ease-out)

    if type is light

        color: darken(rgb(color), 63%)
        border 1px solid lighten(color, 30%)
        text-shadow: 1px 1px 0 lighten(color, 100%)
        box-shadow: \
                inset 0 1px 1px lighten(color, 80%),      // top light
                inset 1px 0 0 lighten(color, 40%),        // left light
                inset -1px 0 0 color,                     // right dark
                0 1px 0 darken(color, 10%)                // bottom dark

        gradient_linear(top, lighten(color, 75%), color)

        &:hover
            cursor: pointer
            color: darken(rgb(color), 70%)
            border-color: darken(color, 15%)
            background-color: darken(color, 35%)
            text-shadow: 1px 1px 0 lighten(rgb(color), 80%)
            box-shadow: \
                    inset 0 1px 0 color,                  // L (top)
                    inset 1px 0 0 color,                  // L (left)
                    inset -1px 0 0 color,                 // L (right)
                    0 1px 0 darken(color, 30%)            // D (bottom)

    else if type is dark
        color: lighten(color, 77%)
        border: none
        text-shadow: -1px -1px 0 darken(color, 55%)
        box-shadow: \
                0 0 5px darken(color, 55%),               // D (perimeter)
                inset 0 1px 1px lighten(color, 15%),      // L (top)
                inset 1px 0 0 darken(color, 6%),          // L (left)
                inset -1px 0 0 darken(color, 60%),        // D (right)
                0 -1px 0 darken(color, 50%),              // D (top)
                0 1px 0 darken(color, 55%)                // D (bottom)

        gradient_linear(top, color, darken(color, 33%))

        &:hover
            cursor: pointer
            color: lighten(color, 88%)
            background-color: darken(color, 65%)
            text-shadow: -1px -1px 0 darken(color, 60%)
            box-shadow: \
                    0 0 5px darken(color, 55%),           // D (perimeter)
                    inset 0 1px 1px lighten(color, 3%),   // L (top)
                    inset 1px 0 0 darken(color, 22%),     // L (left)
                    inset -1px 0 0 darken(color, 62%),    // D (right)
                    0 -1px 0 darken(color, 50%),          // D (top)
                    0 1px 0 darken(color, 55%)            // D (bottom)

    &:active
        position: relative
        top: 1px
